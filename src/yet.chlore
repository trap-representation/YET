;    YET is a standard-compliant implementation of the Becoms editor
;    Copyright (C) 2023  Somdipto Chakraborty
;
;    This program is free software: you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;
;    This program is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;
;    You should have received a copy of the GNU General Public License
;    along with this program.  If not, see <https://www.gnu.org/licenses/>.

import "stdlib.chlore"
import "io.chlore"
import "alloc2.chlore"
;import "/usr/local/include/memchk.chlore" ;uncomment this line and comment out the previous line to use the allocator provided by the `memchk' library instead of the one that's provided by the standard library for detecting memory leaks
import "stddef.chlore"
import "string.chlore"
import "sys.chlore"

set BUF_SIZE 40

import "buffers.chlore"
import "clean_up_err.chlore"
import "edit.chlore"
import "program_info.chlore"

:main

pushi 2
pushp getargc call
pushp write_program_information_and_quit jls

pushl MAX_PATHSIZE pushi 1 addl
pushp aseg call
ldr0 pushp allocation_failure jnz ;check if the allocation was successful

dup dup dup
pushi 1
pushl MAX_PATHSIZE
pushp getargv call

pushi O_RDONLY
pushp openf call
dup pushi -1 pushp open_failure_rd jeq
str2 ;save the file descriptor in gpr 2

pushp read_file jmp

:end_error
pushi 1 hltr

:quit_gracefully
pop
pushp flush call
pushp flush_bufs call
pushp mem_close call
hlt

