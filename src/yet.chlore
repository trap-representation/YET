;    YET is a standard-compliant implementation of the Becoms editor
;    Copyright (C) 2023  Somdipto Chakraborty
;
;    This program is free software: you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;
;    This program is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;
;    You should have received a copy of the GNU General Public License
;    along with this program.  If not, see <https://www.gnu.org/licenses/>.

import "stdlib.chlore"
import "io.chlore"
import "alloc2.chlore"
;import "/usr/local/include/memchk.chlore" ;uncomment this line and comment out the previous line to use the allocator provided by the `memchk' library (instead of the one that's provided by the standard library) for detecting memory leaks
import "stddef.chlore"
import "string.chlore"
import "types.chlore"

set BUF_SIZE 40

import "/usr/local/bin/_yet/buffers.chlore"
import "/usr/local/bin/_yet/clean_up_err.chlore"
import "/usr/local/bin/_yet/edit.chlore"
import "/usr/local/bin/_yet/program_info.chlore"

:main

  pushi 2
  pushp getargc call
  pushp write_program_information_and_quit jls

  pushl MAX_PATHSIZE pushi 1 addl
  pushp aseg call
  get0 pushp main_allocation_failure jnz ;check if the allocation was successful

  dup dup dup
  pushi 1
  pushl MAX_PATHSIZE
  pushp getargv call

  pushi O_RDONLY
  pushp openf call
  dup pushi -1 pushp open_failure_rd jeq
  write2 ;save the input file descriptor in gpr 2

  pushp read_input call
  pushi 1 pushp end_error jeq

  ;allocate_bufs expects a pointer on the top of the stack that it will use to initialize buffer0
  ;do not change the contents of gpr 3
  pushp allocate_bufs call
  pushi 1 pushp end_error jeq
  write5 ;save the pointer to the `buffers' struct that we allocated in gpr 5

  ;do not touch gpr 5
  ;text_editor expects a pointer to the name of the file we are currently working on at the top of the stack
  pushp text_editor call
  pushi 1 pushp end_error jeq
  pushp quit jmp

  :end_error
    pushi 1 hltr

  :quit
    hlt
